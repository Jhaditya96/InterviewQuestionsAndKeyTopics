#Global Attributes
Global attributes may be specified on all HTML elements, even those not specified in the standard. That means that any non-standard 
elements must still permit these attributes, even though using those elements means that the document is no longer HTML5-compliant. 
For example, HTML5-compliant browsers hide content marked as <foo hidden>...</foo>, even though <foo> is not a valid HTML element.

List OF Some Global Attributes:
1.accesskey
2.autocapitalize
3.class
4.contenteditable
5.contextMenu
6.dir - An enumerated attribute indicating the directionality of the element's text.e.g.ltr-lft2rgt rtl-rgt2lft auto-let user decide,etc
7.For further Read:https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body

#Event Attributes
HTML has the ability to let events trigger actions in a browser, like starting a JavaScript when a user clicks on an element.
The event attributes are basically observers, which are added to any HTML tag to observe any particular event, and when that even occurs 
with respect to that particular HTML tag for which event attribute is specified, this attribute will fire the function of Javascript 
expression associated with it.
There is a separate event attribute for every event.

There are few categories for Event attributes and these are based on the event types supported in JavaScript. These are:
-Window Event Attributes
-Mouse Event Attributes
-Form Event Attributes
-Keyboard Event Attributes
-Media Event Attributes
For discription about them:https://www.studytonight.com/html5-references/html-event-attributes

An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the 
progress of an asynchronous task. It can also be triggered programmatically, such as by calling the HTMLElement.click() method of an 
element, or by defining the event, then sending it to a specified target using EventTarget.dispatchEvent().

There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the 
properties and methods which are common to all events.